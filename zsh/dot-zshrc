export LESS_TERMCAP_mb=$'\e[1;32m'
export LESS_TERMCAP_md=$'\e[1;32m'
export LESS_TERMCAP_me=$'\e[0m'
export LESS_TERMCAP_se=$'\e[0m'
export LESS_TERMCAP_so=$'\e[01;33m'
export LESS_TERMCAP_ue=$'\e[0m'
export LESS_TERMCAP_us=$'\e[1;4;31m'
export EDITOR="$(command -v nvim)"
export TERMINAL="$(command -v kitty)"
export BROWSER="$(command -v google-chrome-stable)"
export PAGER="$(command -v nvimpager)"
export PATH=$PATH:~/.local/bin
export PATH=$PATH:~/endorsement/bin
export PATH=~/.npm-global/bin:$PATH
export PATH=~/.yarn/bin:$PATH
export PATH=~/.local/share/gem/ruby/3.0.0/bin:$PATH

export LANG=en_US.UTF-8
#disable bell
unsetopt BEEP

# shellchece disable=SC2034
CASE_SENSITIVE="true"
# shellcheck disable=SC2034
plugins=()

#fzf
export FZF_DEFAULT_COMMAND='rg --files --follow'
export FZF_CTRL_T_COMMAND='rg --files --follow 2>/dev/null'
export FZF_ALT_C_COMMAND="fd --type directory"

source "/usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

fzfKeyBindings=/usr/share/fzf/key-bindings.zsh
export FZF_DEFAULT_OPTS="-m --bind ctrl-a:select-all,ctrl-d:deselect-all,ctrl-t:toggle-all"
# alt_c is already taken by Kitty, we bind fzf-cd-widget to alt-d


if [ -f $fzfKeyBindings ]; then
  source $fzfKeyBindings
fi

#ssh
if [ -z "$SSH_AUTH_SOCK" ] ; then
  echo "> Starting ssh-agent"
  eval $(ssh-agent -s)
fi

if [ -n "$DISPLAY" ] && ! ssh-add -l >/dev/null; then
  ssh-add
fi

source "$HOME/.alias"
source "$HOME/.path"
source "$HOME/.gitprompt"
source "$HOME/.prompt"
source "$HOME/.private"

# History settings
HISTFILE=~/.zsh_history
export HISTFILESIZE=1000000000
export HISTSIZE=1000000000
# immediatly append to history
setopt INC_APPEND_HISTORY
# remove dup
setopt HIST_FIND_NO_DUPS

#
# useful for pinentry-tty prompt
export GPG_TTY="$(tty)"

setopt PROMPT_SUBST
PATH="/home/flocks/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="/home/flocks/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/home/flocks/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/home/flocks/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/home/flocks/perl5"; export PERL_MM_OPT;


pb-kill-line () {
  zle kill-line
  echo -n $CUTBUFFER | xclip -selection c
}

pb-copy-region-as-kill-deactivate-mark () {
  zle copy-region-as-kill
  zle set-mark-command -n -1
  echo -n $CUTBUFFER | xclip -selection c
}

wrap() {
	BUFFER="nvim \$($BUFFER)";
	zle end-of-line;
}

dir() {
    dir=$(find -type d | fzf)
	BUFFER="$BUFFER $dir"
	CURSOR=$(($CURSOR + $#dir + 1))
}

lh () {
	/bin/ls -1th | head -n ${1-1}
}

bindkey -e
zle -N pb-kill-line
zle -N pb-copy-region-as-kill-deactivate-mark
zle -N wrap
zle -N dir
zle -N edit-command-line
bindkey '^K'   pb-kill-line
bindkey '^w'   pb-copy-region-as-kill-deactivate-mark
bindkey "\C-p" history-search-backward
bindkey "\C-n" history-search-forward

autoload -z edit-command-line
bindkey "^X^E" edit-command-line

bindkey "^X^W" wrap
bindkey "^X^J" dir